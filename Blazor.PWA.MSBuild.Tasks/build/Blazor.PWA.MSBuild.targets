<!-- build/Blazor.PWA.MSBuild.targets -->
<Project>
  <Import Project="..\build\Blazor.PWA.MSBuild.ServiceWorker.targets" />
  <Import Project="..\build\Blazor.PWA.MSBuild.ServiceWorkerRegister.targets" />
  <Import Project="..\build\Blazor.PWA.MSBuild.Manifest.targets" />

  <PropertyGroup Label="ServiceWorker">
    <!-- The service worker file names to generate -->
    <ServiceWorkerFileName Condition="'$(ServiceWorkerFileName)' == ''">ServiceWorker.js</ServiceWorkerFileName>
    <ServiceWorkerRegisterFileName Condition="'$(ServiceWorkerRegisterFileName)' == ''">ServiceWorkerRegister.js</ServiceWorkerRegisterFileName>

    <!-- The PWA strategy to implement in the service worker -->
    <!-- Currently only supports offline-first -->
    <ServiceWorkerPattern Condition="'$(ServiceWorkerPattern)' == ''">offline-first</ServiceWorkerPattern>
    <!-- Remove this when we implement more patterns -->
    <ServiceWorkerPattern>offline-first</ServiceWorkerPattern>

    <!-- The Cache name and version together form the name of the application browser cache e.g. blazor-cache-v1 -->
    <ServiceWorkerCacheName Condition="'$(ServiceWorkerCacheName)' == ''">blazor-cache</ServiceWorkerCacheName>
    <ServiceWorkerCacheVersion Condition="'$(ServiceWorkerCacheVersion)' == ''">1</ServiceWorkerCacheVersion>

    <!-- The "home route" url for the application -->
    <ServiceWorkerBaseUrl Condition="'$(ServiceWorkerBaseUrl)' == ''">/</ServiceWorkerBaseUrl>

    <!-- The actual home page served up for the base URL - so we have a way to cache it -->
    <ServiceWorkerIndexUrl Condition="'$(ServiceWorkerIndexUrl)' == ''">index.html</ServiceWorkerIndexUrl>

  </PropertyGroup>

  <PropertyGroup Label="Manifest">
    <!-- The manifest file name to generate -->
    <ManifestFileName Condition="'$(ManifestFileName)' == ''">manifest.json</ManifestFileName>

    <!-- Force re-creation of the manifest.json -->
    <ManifestForce Condition="'$(ManifestForce)' == ''">$(ServiceWorkerForce)</ManifestForce>
  </PropertyGroup>

  <PropertyGroup Label="Register">
    <!-- Force re-creation of the ServiceWorkerRegister.js -->
    <ServiceWorkerRegisterForce Condition="'$(ServiceWorkerRegisterForce)' == ''">$(ServiceWorkerForce)</ServiceWorkerRegisterForce>
  </PropertyGroup>

  <PropertyGroup Label="BuildBehaviours">
    <CreatePWAAfterTargets Condition="'$(CreatePWAAfterTargets)' == ''">AfterBuild</CreatePWAAfterTargets>
    <CreatePWABeforeTargets Condition="'$(CreatePWABeforeTargets)' == ''"></CreatePWABeforeTargets>
  </PropertyGroup>

  <PropertyGroup Label="ProjectLocations">
    <WWWRoot Condition="'$(WWWRoot)' == ''">$(MsBuildProjectDirectory)\wwwroot\</WWWRoot>
  </PropertyGroup>

  <Target Name="CreatePWA"
          AfterTargets="$(CreatePWAAfterTargets)"
          BeforeTargets="$(CreatePWABeforeTargets)"
          Condition="'$(ServiceWorkerPattern)'!='' AND '$(ServiceWorkerCacheName)'!='' AND '$(ServiceWorkerCacheVersion)'!='' AND (!Exists('$(WWWRoot)$(ServiceWorkerFileName)') OR '$(ServiceWorkerForce)'=='true')">

    <Message Importance="high" Text="Building Your PWA: Type: $(ServiceWorkerPattern) CacheName: $(ServiceWorkerCacheName) CacheVersion: $(ServiceWorkerCacheVersion)"/>
    <CallTarget Targets="BuildServiceWorkerInstaller"/>
    <CallTarget Targets="BuildServiceWorkerManifest"/>
    <CallTarget Targets="BuildServiceWorker"/>
  </Target>

</Project>